{"version":3,"sources":["app/collections/folders.coffee","app/collections/konnectors.coffee","app/initialize.coffee","app/lib/base_view.coffee","app/lib/request.coffee","app/lib/view_collection.coffee","app/locales/en.coffee","app/locales/fr.coffee","app/models/folder.coffee","app/models/konnector.coffee","app/realtime.coffee","app/router.coffee","app/views/app_view.coffee","app/views/konnector.coffee","app/views/menu.coffee","app/views/menu_item.coffee","app/views/templates/default.jade","app/views/templates/home.jade","app/views/templates/konnector.jade","app/views/templates/menu_item.jade"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/BA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhCA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5CA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3CA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArxBA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlCA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzDA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhrrDA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxDA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtDA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/BA;AAAA","file":"public/javascripts/app.js","sourcesContent":["var FolderCollection,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nmodule.exports = FolderCollection = (function(superClass) {\n  extend(FolderCollection, superClass);\n\n  function FolderCollection() {\n    return FolderCollection.__super__.constructor.apply(this, arguments);\n  }\n\n  FolderCollection.prototype.model = require('../models/folder');\n\n  FolderCollection.prototype.url = 'folders/';\n\n  FolderCollection.prototype.comparator = function(a, b) {\n    return a.getFullPath().localeCompare(b.getFullPath());\n  };\n\n  FolderCollection.prototype.getAllPaths = function() {\n    return this.models.map(function(model) {\n      return {\n        path: model.getFullPath(),\n        id: model.get('id')\n      };\n    });\n  };\n\n  return FolderCollection;\n\n})(Backbone.Collection);\n","var KonnectorCollection,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nmodule.exports = KonnectorCollection = (function(superClass) {\n  extend(KonnectorCollection, superClass);\n\n  function KonnectorCollection() {\n    return KonnectorCollection.__super__.constructor.apply(this, arguments);\n  }\n\n  KonnectorCollection.prototype.model = require('../models/konnector');\n\n  KonnectorCollection.prototype.url = 'konnectors/';\n\n  KonnectorCollection.prototype.comparator = function(a, b) {\n    if (a.isConfigured() && !b.isConfigured()) {\n      return -1;\n    } else if (!a.isConfigured() && b.isConfigured()) {\n      return 1;\n    } else if (a.get('name') > b.get('name')) {\n      return 1;\n    } else if (a.get('name') < b.get('name')) {\n      return -1;\n    } else {\n      return 0;\n    }\n  };\n\n  return KonnectorCollection;\n\n})(Backbone.Collection);\n","var AppView, FolderCollection, KonnectorCollection, KonnectorListener, Router, request;\n\nrequest = require('./lib/request');\n\nKonnectorListener = require('./realtime');\n\nKonnectorCollection = require('../collections/konnectors');\n\nFolderCollection = require('../collections/folders');\n\nAppView = require('./views/app_view');\n\nRouter = require('./router');\n\n$(function() {\n  var appView, e, folders, initFolders, initKonnectors, konnectors, locale, locales, polyglot, remoteChangeListener;\n  locale = window.locale;\n  polyglot = new Polyglot();\n  try {\n    locales = require(\"locales/\" + locale);\n  } catch (_error) {\n    e = _error;\n    locale = 'en';\n    locales = require('locales/en');\n  }\n  polyglot.extend(locales);\n  window.t = polyglot.t.bind(polyglot);\n  initKonnectors = window.initKonnectors || [];\n  initFolders = window.initFolders || [];\n  konnectors = new KonnectorCollection(initKonnectors);\n  folders = new FolderCollection(initFolders);\n  remoteChangeListener = new KonnectorListener();\n  remoteChangeListener.watch(konnectors);\n  remoteChangeListener.watch(folders);\n  appView = new AppView({\n    collection: konnectors,\n    folders: folders\n  });\n  appView.render();\n  window.router = new Router({\n    appView: appView\n  });\n  return Backbone.history.start();\n});\n","var BaseView,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nmodule.exports = BaseView = (function(superClass) {\n  extend(BaseView, superClass);\n\n  function BaseView() {\n    return BaseView.__super__.constructor.apply(this, arguments);\n  }\n\n  BaseView.prototype.template = function() {};\n\n  BaseView.prototype.initialize = function() {};\n\n  BaseView.prototype.getRenderData = function() {\n    var ref;\n    return {\n      model: (ref = this.model) != null ? ref.toJSON() : void 0\n    };\n  };\n\n  BaseView.prototype.render = function() {\n    this.beforeRender();\n    this.$el.html(this.template(this.getRenderData()));\n    this.afterRender();\n    return this;\n  };\n\n  BaseView.prototype.beforeRender = function() {};\n\n  BaseView.prototype.afterRender = function() {};\n\n  BaseView.prototype.destroy = function() {\n    this.undelegateEvents();\n    this.$el.removeData().unbind();\n    this.remove();\n    return Backbone.View.prototype.remove.call(this);\n  };\n\n  return BaseView;\n\n})(Backbone.View);\n","var request;\n\nmodule.exports = request = {\n  request: function(type, url, data, callback) {\n    return $.ajax({\n      type: type,\n      url: url,\n      data: data != null ? JSON.stringify(data) : null,\n      contentType: \"application/json\",\n      dataType: \"json\",\n      success: function(data) {\n        if (callback != null) {\n          return callback(null, data);\n        }\n      },\n      error: function(data) {\n        if ((data != null) && (data.msg != null) && (callback != null)) {\n          return callback(new Error(data.msg));\n        } else if (callback != null) {\n          return callback(new Error(\"Server error occured\"));\n        }\n      }\n    });\n  },\n  get: function(url, callback) {\n    return request.request(\"GET\", url, null, callback);\n  },\n  postr: function(url, data, callback) {\n    return request.request(\"POST\", url, data, callback);\n  },\n  put: function(url, data, callback) {\n    return request.request(\"PUT\", url, data, callback);\n  },\n  del: function(url, callback) {\n    return request.request(\"DELETE\", url, null, callback);\n  }\n};\n","var BaseView, ViewCollection,\n  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nBaseView = require('lib/base_view');\n\nmodule.exports = ViewCollection = (function(superClass) {\n  extend(ViewCollection, superClass);\n\n  function ViewCollection() {\n    this.fetch = bind(this.fetch, this);\n    this.removeItem = bind(this.removeItem, this);\n    this.addItem = bind(this.addItem, this);\n    return ViewCollection.__super__.constructor.apply(this, arguments);\n  }\n\n  ViewCollection.prototype.itemview = null;\n\n  ViewCollection.prototype.views = {};\n\n  ViewCollection.prototype.template = function() {\n    return '';\n  };\n\n  ViewCollection.prototype.itemViewOptions = function() {};\n\n  ViewCollection.prototype.collectionEl = null;\n\n  ViewCollection.prototype.onChange = function() {\n    return this.$el.toggleClass('empty', _.size(this.views) === 0);\n  };\n\n  ViewCollection.prototype.appendView = function(view) {\n    return this.$collectionEl.append(view.el);\n  };\n\n  ViewCollection.prototype.initialize = function() {\n    ViewCollection.__super__.initialize.apply(this, arguments);\n    this.views = {};\n    this.listenTo(this.collection, 'reset', this.onReset);\n    this.listenTo(this.collection, 'add', this.addItem);\n    this.listenTo(this.collection, 'remove', this.removeItem);\n    this.listenTo(this.collection, 'sort', this.render);\n    return this.$collectionEl = $(this.collectionEl);\n  };\n\n  ViewCollection.prototype.render = function() {\n    var id, ref, view;\n    ref = this.views;\n    for (id in ref) {\n      view = ref[id];\n      view.$el.detach();\n    }\n    return ViewCollection.__super__.render.apply(this, arguments);\n  };\n\n  ViewCollection.prototype.afterRender = function() {\n    var id, ref, view;\n    ref = this.views;\n    for (id in ref) {\n      view = ref[id];\n      this.appendView(view.$el);\n    }\n    this.onReset(this.collection);\n    return this.onChange(this.views);\n  };\n\n  ViewCollection.prototype.remove = function() {\n    this.onReset([]);\n    return ViewCollection.__super__.remove.apply(this, arguments);\n  };\n\n  ViewCollection.prototype.onReset = function(newcollection) {\n    var id, ref, view;\n    ref = this.views;\n    for (id in ref) {\n      view = ref[id];\n      view.remove();\n    }\n    return newcollection.forEach(this.addItem);\n  };\n\n  ViewCollection.prototype.addItem = function(model) {\n    var options, view;\n    options = _.extend({}, {\n      model: model\n    }, this.itemViewOptions(model));\n    view = new this.itemview(options);\n    this.views[model.cid] = view.render();\n    this.appendView(view);\n    return this.onChange(this.views);\n  };\n\n  ViewCollection.prototype.removeItem = function(model) {\n    this.views[model.cid].remove();\n    delete this.views[model.cid];\n    return this.onChange(this.views);\n  };\n\n  ViewCollection.prototype.fetch = function(options) {\n    return this.collection.fetch(options);\n  };\n\n  return ViewCollection;\n\n})(BaseView);\n","module.exports = {\n  'bad credentials': 'Bad Credentials',\n  'no bills retrieved': 'No bills retrieved',\n  'key not found': 'Key not found',\n  'last import:': 'Last import:',\n  'save and import': 'Save and import',\n  'auto import': 'Automatic import',\n  'imported data:': 'Imported data:',\n  'importing...': 'importing...',\n  'no import performed': 'No import performed',\n  'import already running': 'Import is already running.',\n  'firstname': 'Firstname',\n  'lastname': 'Lastname',\n  'login': 'Login',\n  'password': 'Password',\n  'email': 'Email',\n  'accessToken': 'Access token',\n  'accessTokenSecret': 'Access token secret',\n  'consumerKey': 'Consumer Key',\n  'consumerSecret': 'Consumer Secret',\n  'apikey': 'Api key',\n  'phoneNumber': 'Phone number',\n  'folderPath': 'Folder path',\n  'none': 'None',\n  'every hour': 'Every hour',\n  'every day': 'Every day',\n  'every week': 'Every week',\n  'each month': 'Each month',\n  'select starting date': \"Select a starting date\",\n  'start import from': \"From\",\n  'authCode': \"Auth code\",\n  'accountName': \"Account name\",\n  'date format': 'LLL',\n  'home headline': \"With Konnectors you can retrieve many data and save them into your Cozy.\\nFrom your phone bills to your connected scale, or your tweets. Configure the connectors you are interested in:\",\n  'home config step 1': \"Select a connector in the menu on the left\",\n  'home config step 2': \"Follow the instructions to configure it\",\n  'home config step 3': \"Your data are retrieved and saved into your Cozy\",\n  'home more info': \"More information:\",\n  'home help step 1': \"You must manually trigger the import, except if you enable the auto-import.\",\n  'notification import error': 'an error occurred during import of data',\n  'error occurred during import.': 'An error occurred during the last import.',\n  'error occurred during import:': 'An error occurred during the last import:',\n  \"import server error\": \"Server error occured while importing.\",\n  'open selected folder': 'Open selected folder',\n  'konnector description free': \"Download all your internet bills from Free. This konnector requires the Files application to store the bill PDF files.\",\n  'konnector description free mobile': \"Download all your phone bills from Free Mobile. This konnector requires the Files application to store the bill PDF files.\",\n  'konnector description bouygues': \"Download all your phone bills from Bouygues Telecom. This konnector requires the Files application to store the bill PDF files.\",\n  'konnector description bouygues box': \"Download all your internet bills from Bouygues Telecom. This konnector requires the Files application to store the bill PDF files.\",\n  'konnector description github': \"Download all your Github Bills. This konnector requires the Files application to store the bill PDF files.\",\n  'konnector description github commits': \"Save infos from all your Github Commits.\",\n  'konnector description jawbone': \"Download Move and Sleep Data from Jawbone CSV file.\",\n  'konnector description rescuetime': \"Download all your activities from Rescue Time\",\n  'konnector description withings': \"Download all your measures from your Withings account.\",\n  'konnector description twitter': \"Download all your tweets published on Twitter. This konnector requires two\\nidentifiers and two secret keys. They can be generated on the <a\\nhref=\\\"https://apps.twitter.com/\\\">Twitter app dashboard</a>. There you will\\nbe able to create an app. They will give you credentials for this app. The\\ncurrent konnector will use them to connect to Twitter and fetch your data.\",\n  'konnector description digital ocean': \"Download all your Digital Ocean Bills. This konnector requires the Files application to store the bill PDF files.\",\n  'konnector description sosh': \"Download all your Sosh Bills. This konnector requires the Files application to store the bill PDF files.\",\n  'konnector description electrabel': \"Download all you Electrabel Bills. This konnector requires the Files application to store the bill PDF files.\",\n  'konnector description orange': \"Download all your Orange Bills. This konnector requires the Files application to store the bill PDF files.\",\n  'konnector description nest': \"Save current temperature measured by your Nest thermostat.\",\n  'konnector description numericable': \"Download all your Numéricable Bills. This konnector requires the Files application to store the bill PDF files.\",\n  'konnector description virginmobile': \"Download all your Virgin Mobile  bills. This konnector requires the Files application to store the bill PDF files.\",\n  'konnector description isen': \"Students from ISEN engineer school can import their course materials and calendar.\",\n  'konnector description googlecontacts': \"Import google contacts with cozy through google's API..\",\n  'konnector customview googlecontacts 4': \"Initialize or reset this konnector\",\n  'konnector customview googlecontacts 1': \"1. Press \\\"connect your google account\\\" button to connect to your Google account and authorize your Cozy to access to it. Google will provide you with a complex string. Once you get it copy it in your clipboard, we will use it in second step.\",\n  'konnector customview googlecontacts 2': \"Connect your Google account\",\n  'konnector customview googlecontacts 3': \"2. Paste this string in the Auth code field. Then press save and import to start the sync. Account name will be automatically updated.\",\n  'notification prefix': \"Konnector %{name}:\",\n  'notification github commits': \"%{smart_count} new commit imported |||| %{smart_count} new commits imported\",\n  'notification twitter': \"%{smart_count} new tweet imported |||| %{smart_count} new tweets imported\",\n  'notification free': \"%{smart_count} new invoice imported |||| %{smart_count} new invoices imported\",\n  'notification github': \"%{smart_count} new invoice imported |||| %{smart_count} new invoices imported\",\n  'notification jawbone': \"%{smart_count} new measure imported |||| %{smart_count} new measures imported\",\n  'notification rescuetime': \"%{smart_count} new activity imported |||| %{smart_count} new activites imported\",\n  'notification withings': \"%{smart_count} new measure imported |||| %{smart_count} new measures imported\",\n  'notification free mobile': \"%{smart_count} new invoice imported |||| %{smart_count} new invoices imported\",\n  'notification digital ocean': \"%{smart_count} new invoice imported |||| %{smart_count} new invoices imported\",\n  'notification sosh': \"%{smart_count} new invoice imported |||| %{smart_count} new invoices imported\",\n  'notification electrabel': \"%{smart_count} new invoice imported |||| %{smart_count} new invoices imported\",\n  'notification numericable': \"%{smart_count} new invoice imported |||| %{smart_count} new invoices imported\",\n  'notification virginmobile': \"%{smart_count} new invoice imported |||| %{smart_count} new invoices imported\",\n  \"konnector danger zone\": \"Danger zone\",\n  \"konnector delete credentials\": \"Delete this configuration.\",\n  \"konnector deleted\": \"The konnector configuration was successfully deleted.\",\n  \"konnector deletion error\": \"An error occured while deleting this konnector configuration.\",\n  'notification isen': \"%{smart_count} new course material imported |||| %{smart_count} new course materials imported\",\n  'notification isen event changed': \"Careful, the intervention %{description} will take place on %{newDate} instead of %{oldDate}\",\n  'notification isen date format': \"MM/DD [at] HH:mm a\",\n  'notification isen event deleted': \"Careful, the intervention %{description} that should have taken place on %{date} has been canceled\"\n};\n","module.exports = {\n  'bad credentials': 'Mauvais identifiants',\n  'no bills retrieved': 'Pas de factures trouvées',\n  'key not found': 'Clé non trouvée',\n  'last import:': 'Dernière importation :',\n  'save and import': 'Sauvegarder et importer',\n  'auto import': 'Importation automatique',\n  'imported data:': 'Données importées :',\n  'importing...': 'importation en cours...',\n  'no import performed': \"Pas d'importation effectuée\",\n  'import already running': \"L'import est déjà en cours.\",\n  'firstname': 'Prénom',\n  'lastname': 'Nom',\n  'login': 'Identifiant',\n  'password': 'Mot de passe',\n  'email': 'Mail',\n  'accessToken': 'Access token',\n  'accessTokenSecret': 'Access token secret',\n  'consumerKey': 'Consumer Key',\n  'consumerSecret': 'Consumer Secret',\n  'apikey': 'Api key',\n  'phoneNumber': 'Numéro de téléphone',\n  'folderPath': 'Chemin du dossier',\n  'none': 'Aucun',\n  'every hour': 'Toutes les heures',\n  'every day': 'Tous les jours',\n  'every week': 'Toutes les semaines',\n  'each month': 'Tous les mois',\n  'select starting date': 'Sélectionnez une date de départ',\n  'start import from': 'À partir du',\n  'authCode': \"Auth code\",\n  'accountName': \"Nom du compte\",\n  'date format': 'DD/MM/YYYY [à] HH[h]mm',\n  'home headline': \"Konnectors vous permet de récupérer de nombreuses données et de les intégrer à votre Cozy.\\nDe vos factures de téléphone aux données de votre balance connectée en passant par vos tweets. Configurez les connecteurs qui vous intéressent :\",\n  'home config step 1': \"Sélectionnez un connecteur dans le menu à gauche\",\n  'home config step 2': \"Suivez les instructions pour le configurer\",\n  'home config step 3': \"Vos données sont récupérées et intégrer à votre Cozy\",\n  'home more info': \"Quelques informations supplémentaires :\",\n  'home help step 1': \"Vous devez manuellement déclencher l'importation sauf si vous avez activé l'importation automatique\",\n  'notification import error': \"une erreur est survenue pendant l'importation des données\",\n  'error occurred during import.': 'Une erreur est survenue lors de la dernière importation.',\n  'error occurred during import:': 'Une erreur est survenue lors de la dernière importation :',\n  \"import server error\": \"L'import a rencontré une erreur serveur.\",\n  'open selected folder': 'Ouvrir le dossier sélectionné',\n  'konnector description free': \"Téléchargez toutes vos factures internet de Free. Pour pouvoir stocker les factures au format PDF, ce connecteur requiert que l'application Files soit installée sur votre Cozy.\",\n  'konnector description free mobile': \"Téléchargez toutes vos factures Free Mobile. Pour pouvoir stocker les factures au format PDF, ce connecteur requiert que l'application Files soit installée sur votre Cozy.\",\n  'konnector description bouygues': \"Téléchargez toutes vos factures téléphones de Bouygues Telecom. Pour pouvoir stocker les factures au format PDF, ce connecteur requiert que l'application Files soit installée sur votre Cozy.\",\n  'konnector description bouygues box': \"Téléchargez toutes vos factures internet de Bouygues Telecom. Pour pouvoir stocker les factures au format PDF, ce connecteur requiert que l'application Files soit installée sur votre Cozy.\",\n  'konnector description github': \"Téléchargez toutes vos factures Github. Pour pouvoir stocker les factures au format PDF, ce connecteur requiert que l'application Files soit installée sur votre Cozy.\",\n  'konnector description github commits': \"Sauvegardez les informations de tous vos commits Github.\",\n  'konnector description jawbone': \"Téléchargez les données de déplacement et de sommeil depuis un fichier CSV Jawbone.\",\n  'konnector description rescuetime': \"Téléchargez toutes vos activités RescueTime.\",\n  'konnector description withings': \"Téléchargez toutes les mesures de vos appareils Withings.\",\n  'konnector description twitter': \"Téléchargez tous vos tweets publiés sur Twitter. Ce connecteur requiert\\ndeux identifiants et deux clés secrètes. Vous pouvez les générer via le\\n<a href=\\\"https://apps.twitter.com/\\\">tableau Twitter de gestion\\nd'applications</a>. Vous pourrez y créer une application. Twitter vous\\nfournira des identifiants pour cette application. Avec ces identifiants\\nce connecteur pourra récupérer vos données.\",\n  'konnector description digital ocean': \"Téléchargez toutes vos factures Digital Ocean. Pour pouvoir stocker les factures au format PDF, ce connecteur requiert que l'application Files soit installée sur votre Cozy.\",\n  'konnector description sosh': \"Téléchargez toutes vos factures Sosh. Pour pouvoir stocker les factures au format PDF, ce connecteur requiert que l'application Files soit installée sur votre Cozy.\",\n  'konnector description electrabel': \"Téléchargez toutes vos factures Electrabel. Pour pouvoir stocker les factures au format PDF, ce connecteur requiert que l'application Files soit installée sur votre Cozy.\",\n  'konnector description orange': \"Téléchargez toutes vos factures Orange. Pour pouvoir stocker les factures au format PDF, ce connecteur requiert que l'application Files soit installée sur votre Cozy.\",\n  'konnector description numericable': \"Téléchargez toutes vos factures Numéricable. Pour pouvoir stocker les factures au format PDF, ce connecteur requiert que l'application Files soit installée sur votre Cozy.\",\n  'konnector description virginmobile': \"Téléchargez toutes vos factures Virgin Mobile. Pour pouvoir stocker les factures au format PDF, ce connecteur requiert que l'application Files soit installée sur votre Cozy.\",\n  'konnector description nest': \"Enregistrez la température actuelle mesurée par votre Nest.\",\n  'konnector description isen': \"Les étudiants de l'école d'ingénieur ISEN peuvent importer leurs supports de cours et leur agenda.\",\n  'konnector description googlecontacts': \"Importer ses contacts google via les API Google.\",\n  'konnector customview googlecontacts 4': \"Initialiser ou réinitialiser ce konnector\",\n  'konnector customview googlecontacts 1': \"1. Cliquez sur le bouton \\\"Connecter votre compte google\\\" afin de connecter votre compte google et autoriser Cozy à y accéder. La fenêtre de Google va présenter une chaîne de caractère comlexe pour cela. Copiez la, elle sera utile à l'étape 2.\",\n  'konnector customview googlecontacts 2': \"Connecter votre compte Google\",\n  'konnector customview googlecontacts 3': \"2. Copiez cette chaîne de caractères dans le champs Auth code. Puis cliquez sur le bouton \\\"Sauvegarder et importer\\\" pour lancer l'importation.  Le nom du compte sera mis à jour automatiquement.\",\n  'notification prefix': \"Konnector %{name} :\",\n  'notification github commits': \"%{smart_count} nouveau commit importé |||| %{smart_count} nouveaux commits importés\",\n  'notification twitter': \"%{smart_count} nouveau tweet importé |||| %{smart_count} nouveaux tweets importés\",\n  'notification free': \"%{smart_count} nouvelle facture importée |||| %{smart_count} nouvelles factures importées\",\n  'notification github': \"%{smart_count} nouvelle facture importée |||| %{smart_count} nouvelles factures importées\",\n  'notification jawbone': \"%{smart_count} nouvelle mesure importée |||| %{smart_count} nouvelles mesures importées\",\n  'notification rescuetime': \"%{smart_count} nouvelle activité importée |||| %{smart_count} nouvelles activités importées\",\n  'notification withings': \"%{smart_count} nouvelle mesure importée |||| %{smart_count} nouvelles mesures importées\",\n  'notification free mobile': \"%{smart_count} nouvelle facture importée |||| %{smart_count} nouvelles factures importées\",\n  'notification digital ocean': \"%{smart_count} nouvelle facture importée |||| %{smart_count} nouvelles factures importées\",\n  'notification sosh': \"%{smart_count} nouvelle facture importée |||| %{smart_count} nouvelles factures importées\",\n  'notification electrabel': \"%{smart_count} nouvelle facture importée |||| %{smart_count} nouvelles factures importées\",\n  'notification numericable': \"%{smart_count} nouvelle facture importée |||| %{smart_count} nouvelles factures importées\",\n  'notification virginmobile': \"%{smart_count} nouvelle facture importée |||| %{smart_count} nouvelles factures importées\",\n  \"konnector danger zone\": \"Zone dangereuse\",\n  \"konnector delete credentials\": \"Supprimer cette configuration.\",\n  \"konnector deleted\": \"La configuration de ce connecteur a bien été supprimée.\",\n  \"konnector deletion error\": \"Une erreur est survenue lors de la suppression de la configuration de ce connecteur.\",\n  'notification isen': \"%{smart_count} nouveau support de cours importé |||| %{smart_count} nouveaux supports de cours importés\",\n  'notification isen event changed': \"Attention, l'intervention %{description} se déroulera le %{newDate} au lieu du %{oldDate}\",\n  'notification isen date format': \"DD/MM [à] HH:mm\",\n  'notification isen event deleted': \"Attention, l'intervention %{description} devant se dérouler le %{date} a été annulée\"\n};\n","var FolderModel,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nmodule.exports = FolderModel = (function(superClass) {\n  extend(FolderModel, superClass);\n\n  function FolderModel() {\n    return FolderModel.__super__.constructor.apply(this, arguments);\n  }\n\n  FolderModel.prototype.rootUrl = 'folders/';\n\n  FolderModel.prototype.url = function() {\n    return \"folders/\" + (this.get('id'));\n  };\n\n  FolderModel.prototype.getFullPath = function() {\n    return (this.get('path')) + \"/\" + (this.get('name'));\n  };\n\n  return FolderModel;\n\n})(Backbone.Model);\n","var KonnectorModel,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nmodule.exports = KonnectorModel = (function(superClass) {\n  extend(KonnectorModel, superClass);\n\n  function KonnectorModel() {\n    return KonnectorModel.__super__.constructor.apply(this, arguments);\n  }\n\n  KonnectorModel.prototype.rootUrl = \"konnectors/\";\n\n  KonnectorModel.prototype.url = function() {\n    return \"konnectors/\" + (this.get('id'));\n  };\n\n  KonnectorModel.prototype.isConfigured = function() {\n    var field, fieldValue, fieldValues, fields, noEmptyValue, numFieldValues, numFields, ref;\n    fieldValues = this.get('fieldValues') || {};\n    fields = this.get('fields');\n    numFieldValues = Object.keys(fieldValues).length;\n    numFields = Object.keys(fields).length;\n    noEmptyValue = true;\n    for (field in fields) {\n      fieldValue = fields[field];\n      noEmptyValue = noEmptyValue && ((ref = fieldValues[field]) != null ? ref.length : void 0) > 0;\n    }\n    return numFieldValues >= numFields && noEmptyValue;\n  };\n\n  return KonnectorModel;\n\n})(Backbone.Model);\n","var Folder, Konnector, KonnectorListener,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nKonnector = require('../models/konnector');\n\nFolder = require('../models/folder');\n\nmodule.exports = KonnectorListener = (function(superClass) {\n  extend(KonnectorListener, superClass);\n\n  function KonnectorListener() {\n    return KonnectorListener.__super__.constructor.apply(this, arguments);\n  }\n\n  KonnectorListener.prototype.models = {\n    konnector: Konnector,\n    folder: Folder\n  };\n\n  KonnectorListener.prototype.events = ['konnector.update', 'folder.create', 'folder.update', 'folder.delete'];\n\n  KonnectorListener.prototype.onRemoteUpdate = function(model) {\n    var errorMessage, formattedDate, isImporting, lastImport, lastImportField, ref, slug;\n    if ((model != null ? (ref = model.get('docType')) != null ? ref.toLowerCase() : void 0 : void 0) === 'konnector') {\n      isImporting = model.get('isImporting');\n      slug = model.get('slug');\n      lastImport = model.get('lastImport');\n      errorMessage = model.get('importErrorMessage');\n      formattedDate = moment(lastImport).format(t('date format'));\n      lastImportField = $(\".konnector-\" + slug + \" .last-import\");\n      if (isImporting) {\n        lastImportField.html(t('importing...'));\n      } else if (lastImport != null) {\n        lastImportField.html(formattedDate);\n      } else {\n        lastImportField.html(t('no import performed'));\n      }\n      if (errorMessage != null) {\n        return Backbone.Mediator.pub('konnector:error', model);\n      }\n    } else {\n      return Backbone.Mediator.pub('folders:update', new Folder(model.attributes));\n    }\n  };\n\n  KonnectorListener.prototype.onRemoteCreate = function(model) {\n    return Backbone.Mediator.pub('folders:create', model);\n  };\n\n  KonnectorListener.prototype.onRemoteDelete = function(model) {\n    return Backbone.Mediator.pub('folders:delete', model);\n  };\n\n  return KonnectorListener;\n\n})(CozySocketListener);\n","var Router,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nmodule.exports = Router = (function(superClass) {\n  extend(Router, superClass);\n\n  function Router() {\n    return Router.__super__.constructor.apply(this, arguments);\n  }\n\n  Router.prototype.routes = {\n    '': 'main',\n    'konnector/:slug': 'konnector'\n  };\n\n  Router.prototype.initialize = function(options) {\n    Router.__super__.initialize.call(this);\n    return this.appView = options.appView;\n  };\n\n  Router.prototype.main = function() {\n    return this.appView.showDefault();\n  };\n\n  Router.prototype.konnector = function(slug) {\n    return this.appView.showKonnector(slug);\n  };\n\n  return Router;\n\n})(Backbone.Router);\n","var AppView, BaseView, KonnectorView, MenuView, request,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nBaseView = require('../lib/base_view');\n\nKonnectorView = require('./konnector');\n\nMenuView = require('./menu');\n\nrequest = require('../lib/request');\n\nmodule.exports = AppView = (function(superClass) {\n  extend(AppView, superClass);\n\n  AppView.prototype.el = 'body';\n\n  AppView.prototype.template = require('./templates/home');\n\n  AppView.prototype.defaultTemplate = require('./templates/default');\n\n  AppView.prototype.events = {\n    'click #menu-toggler': 'toggleMenu'\n  };\n\n  AppView.prototype.subscriptions = {\n    'folders:create': 'onFolderRemoteCreate',\n    'folders:update': 'onFolderRemoteUpdate',\n    'folders:delete': 'onFolderRemoteDelete'\n  };\n\n  function AppView(options) {\n    AppView.__super__.constructor.call(this, options);\n    this.folders = options.folders;\n  }\n\n  AppView.prototype.afterRender = function() {\n    this.container = this.$('.container');\n    this.menuView = new MenuView({\n      collection: this.collection\n    });\n    return this.menuView.render();\n  };\n\n  AppView.prototype.showDefault = function() {\n    this.menuView.unselectAll();\n    this.container.html(this.defaultTemplate());\n    return this.hideMenu();\n  };\n\n  AppView.prototype.toggleMenu = function() {\n    return this.$('#menu').toggleClass('active');\n  };\n\n  AppView.prototype.hideMenu = function() {\n    return this.$('#menu').removeClass('active');\n  };\n\n  AppView.prototype.showKonnector = function(slug) {\n    var el, konnector, paths;\n    konnector = this.collection.findWhere({\n      slug: slug\n    });\n    if (konnector != null) {\n      this.cleanCurrentView();\n      paths = this.folders.getAllPaths();\n      this.konnectorView = new KonnectorView({\n        model: konnector,\n        paths: paths\n      });\n      el = this.konnectorView.render().$el;\n      this.$('.container').append(el);\n      this.menuView.unselectAll();\n      this.menuView.selectItem(konnector.cid);\n      return this.hideMenu();\n    } else {\n      return window.router.navigate('', true);\n    }\n  };\n\n  AppView.prototype.cleanCurrentView = function() {\n    var defaultView;\n    if (this.konnectorView != null) {\n      this.konnectorView.destroy();\n    }\n    defaultView = this.container.find('#default');\n    if (defaultView.length > 0) {\n      this.$('#menu-toggler').remove();\n      return defaultView.remove();\n    }\n  };\n\n  AppView.prototype.onFolderRemoteCreate = function(model) {\n    this.folders.add(model);\n    this.konnectorView.paths = this.folders.getAllPaths();\n    return this.konnectorView.render();\n  };\n\n  AppView.prototype.onFolderRemoteUpdate = function(model) {\n    if (model != null) {\n      this.folders.add(model, {\n        merge: true\n      });\n      this.konnectorView.paths = this.folders.getAllPaths();\n      return this.konnectorView.render();\n    }\n  };\n\n  AppView.prototype.onFolderRemoteDelete = function(model) {\n    this.folders.remove(model);\n    this.konnectorView.paths = this.folders.getAllPaths();\n    return this.konnectorView.render();\n  };\n\n  return AppView;\n\n})(BaseView);\n","var BaseView, KonnectorView, request,\n  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nBaseView = require('../lib/base_view');\n\nrequest = require('../lib/request');\n\nmodule.exports = KonnectorView = (function(superClass) {\n  extend(KonnectorView, superClass);\n\n  function KonnectorView() {\n    this.afterRender = bind(this.afterRender, this);\n    return KonnectorView.__super__.constructor.apply(this, arguments);\n  }\n\n  KonnectorView.prototype.template = require('./templates/konnector');\n\n  KonnectorView.prototype.className = 'konnector';\n\n  KonnectorView.prototype.events = {\n    \"click #import-button\": \"onImportClicked\",\n    \"click #delete-button\": \"onDeleteClicked\"\n  };\n\n  KonnectorView.prototype.subscriptions = {\n    \"konnector:error\": \"onImportError\"\n  };\n\n  KonnectorView.prototype.initialize = function(options) {\n    KonnectorView.__super__.initialize.call(this, options);\n    this.paths = options.paths || [\n      {\n        path: '/',\n        id: ''\n      }\n    ];\n    return this.listenTo(this.model, 'change', this.render);\n  };\n\n  KonnectorView.prototype.afterRender = function() {\n    var errorMessage, name, ref, slug, val, values;\n    slug = this.model.get('slug');\n    values = this.model.get('fieldValues' || {});\n    errorMessage = this.model.get('importErrorMessage');\n    this.$el.addClass(\"konnector-\" + slug);\n    this.updateImportWidget();\n    if ((errorMessage == null) || this.model.get('isImporting')) {\n      this.hideErrors();\n    } else if (errorMessage) {\n      this.showErrors(t(errorMessage));\n    }\n    if (values == null) {\n      values = {};\n    }\n    ref = this.model.get('fields');\n    for (name in ref) {\n      val = ref[name];\n      if (values[name] == null) {\n        values[name] = \"\";\n      }\n      this.addFieldWidget(slug, name, val, values);\n      if (val === 'folder') {\n        this.configureFolderInput(slug, name);\n      }\n    }\n    return this.addIntervalWidget(slug);\n  };\n\n  KonnectorView.prototype.updateImportWidget = function() {\n    var formattedDate, isImporting, lastImport;\n    isImporting = this.model.get('isImporting');\n    lastImport = this.model.get('lastImport');\n    if (isImporting) {\n      this.$('.last-import').html(t('importing...'));\n      return this.disableImportButton();\n    } else if (lastImport != null) {\n      formattedDate = moment(lastImport).format(t('date format'));\n      this.$('.last-import').html(formattedDate);\n      return this.enableImportButton();\n    } else {\n      this.$('.last-import').html(t(\"no import performed\"));\n      return this.enableImportButton();\n    }\n  };\n\n  KonnectorView.prototype.enableImportButton = function() {\n    this.$('#import-button').attr('aria-busy', false);\n    return this.$('#import-button').attr('aria-disabled', false);\n  };\n\n  KonnectorView.prototype.disableImportButton = function() {\n    this.$('#import-button').attr('aria-busy', true);\n    return this.$('#import-button').attr('aria-disabled', true);\n  };\n\n  KonnectorView.prototype.showErrors = function(msg) {\n    this.$('.error .message').html(msg);\n    return this.$('.error').show();\n  };\n\n  KonnectorView.prototype.hideErrors = function() {\n    return this.$('.error').hide();\n  };\n\n  KonnectorView.prototype.onImportClicked = function() {\n    var data, fieldValues, importDate, importInterval, name, ref, slug, val;\n    if (!this.model.get('isImporting')) {\n      slug = this.model.get('slug');\n      importDate = $(\"#\" + slug + \"-import-date\").val();\n      this.hideErrors();\n      fieldValues = {\n        date: importDate\n      };\n      ref = this.model.get('fields');\n      for (name in ref) {\n        val = ref[name];\n        if (val === 'folder') {\n          fieldValues[name] = this.getFolderPath(slug, name);\n        } else {\n          fieldValues[name] = $(\"#\" + slug + \"-\" + name + \"-input\").val();\n        }\n      }\n      importInterval = $(\"#\" + slug + \"-autoimport-input\").val();\n      this.disableImportButton();\n      data = {\n        fieldValues: fieldValues,\n        importInterval: importInterval\n      };\n      this.model.set({\n        'isImporting': true\n      });\n      return this.model.save(data, {\n        success: function(model, success) {},\n        error: (function(_this) {\n          return function(model, err) {\n            if (err.status >= 400 && err.status !== 504) {\n              try {\n                return _this.showErrors(t(JSON.parse(err.responseText).message));\n              } catch (_error) {\n                return _this.showErrors(t(\"import server error\"));\n              }\n            }\n          };\n        })(this)\n      });\n    } else {\n      return alert(t('import already running'));\n    }\n  };\n\n  KonnectorView.prototype.getFolderPath = function(slug, name) {\n    var id, path, value;\n    id = $(\"#\" + slug + \"-\" + name + \"-input\").val();\n    value = '';\n    path = _.findWhere(this.paths, {\n      id: id\n    });\n    if (path != null) {\n      value = path.path;\n    }\n    return value;\n  };\n\n  KonnectorView.prototype.configureFolderInput = function(slug, name) {\n    var input;\n    input = this.$(\"#\" + slug + \"-\" + name + \"-input\");\n    return input.change(function() {\n      var folderButton, id, link;\n      id = input.val();\n      folderButton = input.parent().parent().find(\".folder-link\");\n      link = \"/#apps/files/folders/\" + id;\n      return folderButton.attr('href', link);\n    });\n  };\n\n  KonnectorView.prototype.addFieldWidget = function(slug, name, val, values) {\n    var fieldHtml, i, len, path, pathName, ref, selectedPath;\n    if (val === 'label') {\n      fieldHtml = \"<div class=\\\"field line \" + (val === 'hidden' ? 'hidden' : void 0) + \"\\\">\\n    <label for=\\\"\" + slug + \"-\" + name + \"-input\\\">\" + (t(name)) + \" : </label>\\n    <b id=\\\"\" + slug + \"-\" + name + \"-input\\\" >\" + values[name] + \"</b>\\n</div>\";\n    } else {\n      fieldHtml = \"<div class=\\\"field line \" + (val === 'hidden' ? 'hidden' : void 0) + \"\\\">\\n<div><label for=\\\"\" + slug + \"-\" + name + \"-input\\\">\" + (t(name)) + \"</label></div>\";\n      if (val === 'folder') {\n        fieldHtml += \"<div><select id=\\\"\" + slug + \"-\" + name + \"-input\\\" class=\\\"folder\\\"\\\">\";\n        selectedPath = {\n          path: '',\n          id: ''\n        };\n        pathName = values[name];\n        if (this.paths.length > 0) {\n          if (pathName == null) {\n            pathName = this.paths[0].path;\n          }\n        }\n        if (this.paths.length > 0) {\n          ref = this.paths;\n          for (i = 0, len = ref.length; i < len; i++) {\n            path = ref[i];\n            if (path.path === pathName) {\n              fieldHtml += \"<option selected value=\\\"\" + path.id + \"\\\">\" + path.path + \"</option>\";\n              selectedPath = path;\n            } else {\n              fieldHtml += \"<option value=\\\"\" + path.id + \"\\\">\" + path.path + \"</option>\";\n            }\n          }\n        }\n        fieldHtml += \"</select></div>\";\n        fieldHtml += \"<a href=\\\"/#apps/files/folders/\" + selectedPath.id + \"\\\"\\nclass=\\\"folder-link\\\"\\ntarget=\\\"_blank\\\">\\n\" + (t(\"open selected folder\")) + \"\\n</a>\";\n        fieldHtml += \"</div>\";\n      } else {\n        fieldHtml += \"<div><input id=\\\"\" + slug + \"-\" + name + \"-input\\\" type=\\\"\" + val + \"\\\"\\n\\n        value=\\\"\" + values[name] + \"\\\" \" + (val === 'readonly' ? 'readonly' : void 0) + \" /></div>\\n</div>\";\n      }\n    }\n    return this.$('.fields').append(fieldHtml);\n  };\n\n  KonnectorView.prototype.addIntervalWidget = function(slug) {\n    var customViewElem, fieldHtml, importInterval, intervals, isLater, key, lastAutoImport, rawCustomView, selected, translatedCustomView, val, value;\n    lastAutoImport = this.model.get('lastAutoImport');\n    intervals = {\n      none: t(\"none\"),\n      hour: t(\"every hour\"),\n      day: t(\"every day\"),\n      week: t(\"every week\"),\n      month: t(\"each month\")\n    };\n    importInterval = this.model.get('importInterval' || '');\n    fieldHtml = \"<div class=\\\"field line\\\">\\n<div><label for=\\\"\" + slug + \"-autoimport-input\\\">\" + (t('auto import')) + \"</label></div>\\n<div><select id=\\\"\" + slug + \"-autoimport-input\\\" class=\\\"autoimport\\\">\";\n    for (key in intervals) {\n      value = intervals[key];\n      selected = importInterval === key ? 'selected' : '';\n      fieldHtml += \"<option value=\\\"\" + key + \"\\\" \" + selected + \">\" + value + \"</option>\";\n    }\n    fieldHtml += \"</select>\\n<span id=\\\"\" + slug + \"-first-import\\\">\\n<span id=\\\"\" + slug + \"-first-import-text\\\">\\n<a id=\\\"\" + slug + \"-first-import-link\\\" href=\\\"#\\\">\" + (t(\"select starting date\")) + \"</a></span>\\n<span id=\\\"\" + slug + \"-first-import-date\\\"><span>\" + (t(\"start import from\")) + \"</span>\\n<input id=\\\"\" + slug + \"-import-date\\\" class=\\\"autoimport\\\" maxlength=\\\"8\\\" type=\\\"text\\\">\\n</input>\\n</span></span>\\n</div>\\n</div>\";\n    this.$('.fields').append(fieldHtml);\n    this.autoImportInput = this.$(\"#\" + slug + \"-autoimport-input\");\n    this.firstImport = this.$(\"#\" + slug + \"-first-import\");\n    this.firstImportDate = this.$(\"#\" + slug + \"-first-import-date\");\n    this.importDate = this.$(\"#\" + slug + \"-import-date\");\n    this.firstImportText = this.$(\"#\" + slug + \"-first-import-text\");\n    this.firstImportLink = this.$(\"#\" + slug + \"-first-import-link\");\n    importInterval = this.autoImportInput.val();\n    this.firstImportDate.hide();\n    this.importDate.datepicker({\n      minDate: 1,\n      dateFormat: \"dd-mm-yy\"\n    });\n    if (!(importInterval === 'none' || importInterval === 'hour')) {\n      isLater = moment(lastAutoImport).valueOf() > moment().valueOf();\n      if ((lastAutoImport != null) && isLater) {\n        val = moment(lastAutoImport).format('DD-MM-YYYY');\n        this.firstImportDate.show();\n        this.firstImportText.hide();\n        this.importDate.val(val);\n      } else {\n        this.firstImport.show();\n      }\n    } else {\n      this.firstImport.hide();\n    }\n    this.firstImportLink.click((function(_this) {\n      return function(event) {\n        event.preventDefault();\n        _this.firstImportDate.show();\n        return _this.firstImportText.hide();\n      };\n    })(this));\n    this.autoImportInput.change((function(_this) {\n      return function() {\n        importInterval = _this.autoImportInput.val();\n        if (!(importInterval === 'none' || importInterval === 'hour')) {\n          return _this.firstImport.show();\n        } else {\n          return _this.firstImport.hide();\n        }\n      };\n    })(this));\n    if (this.model.has('customView')) {\n      rawCustomView = this.model.get('customView');\n      translatedCustomView = rawCustomView.replace(/<%t ([^%]*)%>/g, function(match, key) {\n        return t(key.trim());\n      });\n      customViewElem = $(\"<div class='customView'></div\");\n      customViewElem.append(translatedCustomView);\n      return customViewElem.insertBefore(this.$('.fields'));\n    }\n  };\n\n  KonnectorView.prototype.onDeleteClicked = function() {\n    return request.del(\"konnectors/\" + this.model.id, (function(_this) {\n      return function(err) {\n        if (err) {\n          return alert(t('konnector deletion error'));\n        } else {\n          alert(t('konnector deleted'));\n          _this.model.set('lastAutoImport', null);\n          _this.model.set('fieldValues', {});\n          _this.model.set('password', '{}');\n          return window.router.navigate('', {\n            trigger: true\n          });\n        }\n      };\n    })(this));\n  };\n\n  KonnectorView.prototype.onImportError = function(model) {\n    var errorMessage;\n    errorMessage = model.get('importErrorMessage');\n    this.model.set('importErrorMessage', errorMessage);\n    return this.showErrors(errorMessage);\n  };\n\n  return KonnectorView;\n\n})(BaseView);\n","var KonnectorsView, MenuItemView, ViewCollection,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nViewCollection = require('../lib/view_collection');\n\nMenuItemView = require('./menu_item');\n\nmodule.exports = KonnectorsView = (function(superClass) {\n  extend(KonnectorsView, superClass);\n\n  function KonnectorsView() {\n    return KonnectorsView.__super__.constructor.apply(this, arguments);\n  }\n\n  KonnectorsView.prototype.collectionEl = '#konnectors';\n\n  KonnectorsView.prototype.itemview = MenuItemView;\n\n  KonnectorsView.prototype.initialize = function(options) {\n    KonnectorsView.__super__.initialize.call(this, options);\n    this.listenTo(this.collection, 'change', this.collection.sort.bind(this.collection));\n    return this.listenTo(this.collection, 'change', this.render);\n  };\n\n  KonnectorsView.prototype.afterRender = function() {\n    KonnectorsView.__super__.afterRender.call(this);\n    return this.selectItem(this.selectedCid);\n  };\n\n  KonnectorsView.prototype.selectItem = function(modelCid) {\n    var view;\n    this.selectedCid = modelCid;\n    view = this.views[modelCid];\n    if (view != null) {\n      return view.select();\n    }\n  };\n\n  KonnectorsView.prototype.unselectAll = function() {\n    var index, ref, results, view;\n    ref = this.views;\n    results = [];\n    for (index in ref) {\n      view = ref[index];\n      results.push(view.unselect());\n    }\n    return results;\n  };\n\n  return KonnectorsView;\n\n})(ViewCollection);\n","var BaseView, MenuItemView,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nBaseView = require('../lib/base_view');\n\nmodule.exports = MenuItemView = (function(superClass) {\n  extend(MenuItemView, superClass);\n\n  function MenuItemView() {\n    return MenuItemView.__super__.constructor.apply(this, arguments);\n  }\n\n  MenuItemView.prototype.tagName = 'li';\n\n  MenuItemView.prototype.template = require('./templates/menu_item');\n\n  MenuItemView.prototype.initialize = function(options) {\n    MenuItemView.__super__.initialize.call(this, options);\n    return this.listenTo(this.model, 'change', this.render);\n  };\n\n  MenuItemView.prototype.getRenderData = function() {\n    var formattedDate, lastImport;\n    lastImport = this.model.get('lastImport');\n    if (this.model.isConfigured() && (lastImport != null)) {\n      formattedDate = moment(lastImport).format(t('date format'));\n      lastImport = (t('last import:')) + \"  \" + formattedDate;\n    } else if (this.model.isConfigured()) {\n      lastImport = t(\"no import performed\");\n    } else {\n      lastImport = \"\";\n    }\n    return _.extend({}, MenuItemView.__super__.getRenderData.call(this), {\n      lastImport: lastImport\n    });\n  };\n\n  MenuItemView.prototype.afterRender = function() {\n    if (this.model.isConfigured()) {\n      this.$el.addClass('configured');\n    }\n    return this.$el.addClass(this.model.get('slug'));\n  };\n\n  MenuItemView.prototype.select = function() {\n    return this.$el.addClass('selected');\n  };\n\n  MenuItemView.prototype.unselect = function() {\n    return this.$el.removeClass('selected');\n  };\n\n  return MenuItemView;\n\n})(BaseView);\n","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div id=\"menu-toggler\"><div class=\"fa fa-bars\"></div></div><div id=\"default\" class=\"default\"><header></header><p>');\nvar __val__ = t('home headline')\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('</p><ul><li>');\nvar __val__ = t('home config step 1')\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('</li><li>');\nvar __val__ = t('home config step 2')\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('</li><li>');\nvar __val__ = t('home config step 3')\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('</li></ul>' + escape((interp = t('home more info')) == null ? '' : interp) + '<ul><li>');\nvar __val__ = t('home help step 1')\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('</li></ul></div>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div id=\"menu\" class=\"menu\"><ul id=\"konnectors\"></ul></div><div class=\"container\"></div>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<!-- .konnector --><h2 class=\"name\"><div id=\"menu-toggler\"><div class=\"fa fa-bars\"></div></div><span class=\"service-icon\"></span><span>' + escape((interp = model.name) == null ? '' : interp) + '</span></h2><div class=\"description\">');\nvar __val__ = t(model.description)\nbuf.push(null == __val__ ? \"\" : __val__);\nbuf.push('</div><div class=\"fields\"></div><div class=\"buttons\"><button id=\"import-button\">' + escape((interp = t('save and import')) == null ? '' : interp) + '</button></div>');\nif ( model.importErrorMessage && !model.isImporting)\n{\nbuf.push('<div class=\"error\"><span class=\"error\">');\nvar __val__ = t('error occurred during import:') + ' '\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('<span class=\"message\">');\nvar __val__ = t(model.importErrorMessage)\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('</span></span></div>');\n}\nbuf.push('<div class=\"status\">' + escape((interp = status) == null ? '' : interp) + '</div><div class=\"infos\"><div class=\"date\"><span class=\"label\">' + escape((interp = t('last import:')) == null ? '' : interp) + '&nbsp;</span><span class=\"last-import\"></span></div><div class=\"datas\">' + escape((interp = t('imported data:')) == null ? '' : interp) + '&nbsp;');\n// iterate model.modelNames\n;(function(){\n  if ('number' == typeof model.modelNames.length) {\n\n    for (var $index = 0, $$l = model.modelNames.length; $index < $$l; $index++) {\n      var name = model.modelNames[$index];\n\nbuf.push('<a');\nbuf.push(attrs({ 'href':(\"/apps/databrowser/#search/all/\" + (name) + \"\"), 'target':(\"_blank\") }, {\"href\":true,\"target\":true}));\nbuf.push('>' + escape((interp = name) == null ? '' : interp) + '&nbsp;</a>');\n    }\n\n  } else {\n    var $$l = 0;\n    for (var $index in model.modelNames) {\n      $$l++;      var name = model.modelNames[$index];\n\nbuf.push('<a');\nbuf.push(attrs({ 'href':(\"/apps/databrowser/#search/all/\" + (name) + \"\"), 'target':(\"_blank\") }, {\"href\":true,\"target\":true}));\nbuf.push('>' + escape((interp = name) == null ? '' : interp) + '&nbsp;</a>');\n    }\n\n  }\n}).call(this);\n\nbuf.push('</div></div><div class=\"danger-zone\"><h3>');\nvar __val__ = t('konnector danger zone')\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('</h3><button id=\"delete-button\">');\nvar __val__ = t('konnector delete credentials')\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('</button></div>');\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<a');\nbuf.push(attrs({ 'href':(\"#konnector/\" + (model.slug) + \"\") }, {\"href\":true}));\nbuf.push('><span class=\"service-icon\"></span><div><span class=\"name\">');\nvar __val__ = model.name\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('</span>');\n if(lastImport != null && lastImport.length > 0)\n{\nbuf.push('<span class=\"last-import\">');\nvar __val__ = lastImport\nbuf.push(escape(null == __val__ ? \"\" : __val__));\nbuf.push('</span>');\n}\n if (model.isImporting === true)\n{\nbuf.push('<div class=\"spinholder\"><img src=\"images/spinner.svg\"/></div>');\n}\n else if (model.errorMessage != null)\n{\nbuf.push('<i');\nbuf.push(attrs({ 'title':(t('error occurred during import.')), \"class\": ('fa') + ' ' + ('fa-warning') }, {\"title\":true}));\nbuf.push('></i>');\n}\nbuf.push('</div></a>');\n}\nreturn buf.join(\"\");\n};"]}