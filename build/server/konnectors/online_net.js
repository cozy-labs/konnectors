// Generated by CoffeeScript 1.10.0
var Bill, async, cheerio, cozydb, fetcher, filterExisting, fs, linkBankOperation, localization, log, logIn, moment, parsePage, request, saveDataAndFile;

cozydb = require('cozydb');

fs = require('fs');

request = require('request');

moment = require('moment');

cheerio = require('cheerio');

async = require('async');

fetcher = require('../lib/fetcher');

filterExisting = require('../lib/filter_existing');

saveDataAndFile = require('../lib/save_data_and_file');

localization = require('../lib/localization_manager');

linkBankOperation = require('../lib/link_bank_operation');

log = require('printit')({
  prefix: "Online.net",
  date: true
});

Bill = require('../models/bill');

module.exports = {
  name: "Online.net",
  slug: "online_net",
  description: 'konnector description online_net',
  vendorLink: "https://www.online.net/",
  fields: {
    username: "text",
    password: "password",
    folderPath: "folder"
  },
  models: {
    bill: Bill
  },
  init: function(callback) {
    return callback();
  },
  fetch: function(requiredFields, callback) {
    var fileOptions;
    fileOptions = {
      vendor: 'online_net',
      dateFormat: 'YYYYMMDD'
    };
    log.info("Import started");
    return fetcher["new"]().use(logIn).use(parsePage).use(filterExisting(log, Bill)).use(saveDataAndFile(log, Bill, fileOptions, ['bill'])).use(linkBankOperation({
      log: log,
      model: Bill,
      identifier: 'online',
      dateDelta: 14,
      amountDelta: 0.1
    })).args(requiredFields, {}, {}).fetch(function(err, fields, entries) {
      var localizationKey, notifContent, options, ref;
      if (err) {
        return callback(err);
      }
      log.info("Import finished");
      notifContent = null;
      if ((entries != null ? (ref = entries.filtered) != null ? ref.length : void 0 : void 0) > 0) {
        localizationKey = 'notification bills';
        options = {
          smart_count: entries.filtered.length
        };
        notifContent = localization.t(localizationKey, options);
      }
      return callback(null, notifContent);
    });
  }
};

logIn = function(requiredFields, bills, data, next) {
  var billUrl, formUrl, loginOptions, loginUrl, userAgent;
  formUrl = 'https://console.online.net/en/login?o=1';
  loginUrl = 'https://console.online.net/login_check';
  billUrl = "https://console.online.net/en/bill/list";
  userAgent = 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:36.0) ' + 'Gecko/20100101 Firefox/36.0';
  loginOptions = {
    uri: formUrl,
    jar: true,
    method: 'GET',
    headers: {
      'User-Agent': userAgent
    }
  };
  log.info('Logging in on Online.net...');
  return request(loginOptions, function(err, res, body) {
    var $, crsfToken, form;
    if (err) {
      return next(err);
    }
    $ = cheerio.load(body);
    crsfToken = $('input[name="_csrf_token"]').val();
    form = {
      "_target_path": "https://console.online.net/en/account/home",
      "_submit": "Sign+in",
      "_username": requiredFields.username,
      "_password": requiredFields.password,
      "_csrf_token": crsfToken
    };
    loginOptions = {
      method: 'POST',
      followRedirect: false,
      form: form,
      jar: true,
      uri: loginUrl,
      headers: {
        'User-Agent': userAgent
      }
    };
    return request(loginOptions, function(err, res, body) {
      var options;
      if (err) {
        return next(err);
      }
      log.info('Download bill HTML page...');
      options = {
        method: 'GET',
        uri: billUrl,
        jar: true,
        headers: {
          'User-Agent': userAgent
        }
      };
      return request(options, function(err, res, body) {
        if (err) {
          return next(err);
        }
        data.html = body;
        log.info('Bill page downloaded.');
        return next();
      });
    });
  });
};

parsePage = function(requiredFields, bills, data, next) {
  var $, $rows, baseDlUrl, dataIndices;
  baseDlUrl = "https://console.online.net/fr/bill/show/";
  bills.fetched = [];
  dataIndices = {
    'id': 0,
    'date': 1,
    'price': 4
  };
  $ = cheerio.load(data.html);
  $rows = $('table.table.table-striped').eq(1).find('tr').slice(1);
  $rows.each(function() {
    var $cells, amount, bill, date, id;
    $cells = $(this).find('td');
    date = $cells.eq(dataIndices['date']).text().trim();
    amount = $cells.eq(dataIndices['price']).text();
    id = $cells.eq(dataIndices['id']).text();
    bill = {
      date: moment(date),
      amount: amount.replace(' â‚¬', ''),
      pdfurl: baseDlUrl + id,
      vendor: 'Online.net',
      type: 'hosting'
    };
    return bills.fetched.push(bill);
  });
  log.info('Bill data parsed.');
  return next();
};
