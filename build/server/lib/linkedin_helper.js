// Generated by CoffeeScript 1.9.3
var ContactHelper, linkedin;

ContactHelper = require('../lib/contact_helper');

linkedin = {
  getPhoneNumber: function(data) {
    var listPhones, ref;
    listPhones = [];
    if ((ref = data.phone_numbers) != null) {
      ref.forEach(function(number) {
        return listPhones.push({
          name: 'tel',
          type: number.type.toLowerCase(),
          value: number.number.replace(/ /g, '')
        });
      });
    }
    return listPhones;
  },
  getEmails: function(data) {
    var listEmails, ref;
    listEmails = [];
    if ((ref = data.emails_extended) != null) {
      ref.forEach(function(email) {
        var ref1;
        return listEmails.push({
          name: 'email',
          value: email.email,
          type: 'internet',
          pref: (ref1 = email.primary === true) != null ? ref1 : {
            "true": void 0
          }
        });
      });
    }
    return listEmails;
  },
  getUrls: function(data) {
    var listUrls, ref, ref1, ref2;
    listUrls = [];
    if ((ref = data.sites) != null) {
      ref.forEach(function(site) {
        return listUrls.push({
          name: 'url',
          value: site.url,
          type: site.name
        });
      });
    }
    if ((ref1 = data.profiles) != null) {
      ref1.forEach(function(profile) {
        return listUrls.push({
          name: 'url',
          value: profile.url,
          type: 'linkedin'
        });
      });
    }
    if ((ref2 = data.twitter) != null) {
      ref2.forEach(function(twitter) {
        return listUrls.push({
          name: 'url',
          value: twitter.url,
          type: 'twitter'
        });
      });
    }
    return listUrls;
  },
  getAddresses: function(data) {
    var country, listAddresses, ref, segmentAddress;
    listAddresses = [];
    if (data.location != null) {
      segmentAddress = data.location.split(', ').reverse();
      country = segmentAddress[0] || '';
    }
    if ((ref = data.addresses) != null) {
      ref.forEach((function(_this) {
        return function(address) {
          var addressArray;
          addressArray = ContactHelper.adrStringToArray(address.raw);
          addressArray[6] = country;
          return listAddresses.push({
            name: 'adr',
            value: addressArray,
            type: 'main'
          });
        };
      })(this));
    }
    return listAddresses;
  }
};

module.exports = linkedin;
